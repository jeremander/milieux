target-version = "py39"

# rules to include

lint.select = ["E", "F"]

lint.extend-select = [
    "A",  # builtins
    "ANN",  # annotations
    "B",  # bugbear
    "C",  # mccabe (complexity)
    "C4",  # comprehensions
    "D",  # docstrings
    "I",  # isort (import order)
    "ICN",  # import conventions
    "PT",  # pytest style
    "PTH",  # pathlib
    "RET",  # return statements
    "RUF100",  # flag unused noqa
    "T10",  # debugger
    "UP",  # upgrades
]

# rules to ignore
lint.ignore = [
    "ANN101",  # type annotation for 'self' in method
    "ANN102",  # type annotation for 'cls' in classmethod
    "ANN401",  # use of the 'Any' type
    "B027",  # empty method not marked with abstractmethod
    "B905",  # zip without explicit 'strict' parameter
    "C901",  # function is too complex
    "D100",  # module-level docstring
    "D105",  # magic method docstring
    "D107",  # __init__ docstring
    "D203",  # blank line before class docstring
    # "D204",  # blank line after class docstring
    "D205",  # blank line between summary and description
    "D208",  # extra indentation in docstring
    "D209",  # newline before closing quotes
    "D213",  # multiline docstring at second line
    "D400",  # first line ending with period
    "D401",  # docstrings in imperative mood
    "D404",  # first word of docstring is "this"
    "D406",
    "D407",
    "D413",  # blank line after last section
    "D415",  # first line ending with punctuation
    "E501",  # line length
    "E731",  # assign lambda expression
    "PT001",  # use of pytest.fixture (with no parens)
    "PT013",  # use simple import of pytest
    "PTH123",  # Path.open instead of regular open
    "RET501",  # return None
    "RET505",  # unnecessary 'else' after 'return'
    "UP006",  # deprecated collection types in annotations
    "UP007",  # | instead of Union
    "UP035"  # import replacements (collections.abc)
]

# paths to exclude
lint.exclude = [
    ".venv",
    "tmp*",
]

# ignore unused imports in __init__.py files
lint.ignore-init-module-imports = true

line-length = 10000

[lint.per-file-ignores]
"__init__.py" = ["D104", "F401"]
"milieux/cli/distro.py" = ["D102"]
"milieux/cli/env.py" = ["D102"]
"tests/*" = ["ANN", "D"]

[lint.flake8-pytest-style]
parametrize-names-type = "list"

[lint.isort]
# don't separate straight-style and 'from' imports for the same module
force-sort-within-sections = true
# force imports to the top of their section
force-to-top = ["package.utils"]
# patterns to separate into auxiliary blocks, in the order specified
# forced-separate = ["tests"]
# modules to consider first-party
# known-first-party = []
# number of lines after each import block?
lines-after-imports = 2
# whether to order imports by type, rather than strictly alphabetically
order-by-type = true

[lint.pydocstyle]
convention = "google"
